// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UsageProfile.proto
#ifdef PROTOBUF_FOUND
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UsageProfile.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Aseba {
namespace ThymioVPL {

namespace {

const ::google::protobuf::Descriptor* Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_reflection_ = NULL;
const ::google::protobuf::Descriptor* Action_ProgramState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_ProgramState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Action_ActionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Usage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Usage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UsageProfile_2eproto() {
  protobuf_AddDesc_UsageProfile_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UsageProfile.proto");
  GOOGLE_CHECK(file != NULL);
  Action_descriptor_ = file->message_type(0);
  static const int Action_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, statebeforeaction_),
  };
  Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Action_descriptor_,
      Action::default_instance_,
      Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Action));
  Action_ProgramState_descriptor_ = Action_descriptor_->nested_type(0);
  static const int Action_ProgramState_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_ProgramState, xml_),
  };
  Action_ProgramState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Action_ProgramState_descriptor_,
      Action_ProgramState::default_instance_,
      Action_ProgramState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_ProgramState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action_ProgramState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Action_ProgramState));
  Action_ActionType_descriptor_ = Action_descriptor_->enum_type(0);
  Usage_descriptor_ = file->message_type(1);
  static const int Usage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Usage, action_),
  };
  Usage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Usage_descriptor_,
      Usage::default_instance_,
      Usage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Usage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Usage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Usage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UsageProfile_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Action_descriptor_, &Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Action_ProgramState_descriptor_, &Action_ProgramState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Usage_descriptor_, &Usage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UsageProfile_2eproto() {
  delete Action::default_instance_;
  delete Action_reflection_;
  delete Action_ProgramState::default_instance_;
  delete Action_ProgramState_reflection_;
  delete Usage::default_instance_;
  delete Usage_reflection_;
}

void protobuf_AddDesc_UsageProfile_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022UsageProfile.proto\022\017Aseba.ThymioVPL\"\272\001"
    "\n\006Action\0220\n\004type\030\001 \002(\0162\".Aseba.ThymioVPL"
    ".Action.ActionType\022\?\n\021stateBeforeAction\030"
    "\002 \002(\0132$.Aseba.ThymioVPL.Action.ProgramSt"
    "ate\032\033\n\014ProgramState\022\013\n\003xml\030\001 \002(\t\" \n\nActi"
    "onType\022\010\n\004LOAD\020\001\022\010\n\004SAVE\020\002\"0\n\005Usage\022\'\n\006a"
    "ction\030\001 \003(\0132\027.Aseba.ThymioVPL.Action", 276);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UsageProfile.proto", &protobuf_RegisterTypes);
  Action::default_instance_ = new Action();
  Action_ProgramState::default_instance_ = new Action_ProgramState();
  Usage::default_instance_ = new Usage();
  Action::default_instance_->InitAsDefaultInstance();
  Action_ProgramState::default_instance_->InitAsDefaultInstance();
  Usage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UsageProfile_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UsageProfile_2eproto {
  StaticDescriptorInitializer_UsageProfile_2eproto() {
    protobuf_AddDesc_UsageProfile_2eproto();
  }
} static_descriptor_initializer_UsageProfile_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Action_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_ActionType_descriptor_;
}
bool Action_ActionType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Action_ActionType Action::LOAD;
const Action_ActionType Action::SAVE;
const Action_ActionType Action::ActionType_MIN;
const Action_ActionType Action::ActionType_MAX;
const int Action::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Action_ProgramState::kXmlFieldNumber;
#endif  // !_MSC_VER

Action_ProgramState::Action_ProgramState()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Aseba.ThymioVPL.Action.ProgramState)
}

void Action_ProgramState::InitAsDefaultInstance() {
}

Action_ProgramState::Action_ProgramState(const Action_ProgramState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Aseba.ThymioVPL.Action.ProgramState)
}

void Action_ProgramState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  xml_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action_ProgramState::~Action_ProgramState() {
  // @@protoc_insertion_point(destructor:Aseba.ThymioVPL.Action.ProgramState)
  SharedDtor();
}

void Action_ProgramState::SharedDtor() {
  if (xml_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete xml_;
  }
  if (this != default_instance_) {
  }
}

void Action_ProgramState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action_ProgramState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_ProgramState_descriptor_;
}

const Action_ProgramState& Action_ProgramState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UsageProfile_2eproto();
  return *default_instance_;
}

Action_ProgramState* Action_ProgramState::default_instance_ = NULL;

Action_ProgramState* Action_ProgramState::New() const {
  return new Action_ProgramState;
}

void Action_ProgramState::Clear() {
  if (has_xml()) {
    if (xml_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      xml_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Action_ProgramState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Aseba.ThymioVPL.Action.ProgramState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string xml = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->xml().data(), this->xml().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "xml");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Aseba.ThymioVPL.Action.ProgramState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Aseba.ThymioVPL.Action.ProgramState)
  return false;
#undef DO_
}

void Action_ProgramState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Aseba.ThymioVPL.Action.ProgramState)
  // required string xml = 1;
  if (has_xml()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xml().data(), this->xml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xml");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xml(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Aseba.ThymioVPL.Action.ProgramState)
}

::google::protobuf::uint8* Action_ProgramState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Aseba.ThymioVPL.Action.ProgramState)
  // required string xml = 1;
  if (has_xml()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xml().data(), this->xml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "xml");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xml(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Aseba.ThymioVPL.Action.ProgramState)
  return target;
}

int Action_ProgramState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string xml = 1;
    if (has_xml()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xml());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action_ProgramState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Action_ProgramState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Action_ProgramState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Action_ProgramState::MergeFrom(const Action_ProgramState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xml()) {
      set_xml(from.xml());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Action_ProgramState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action_ProgramState::CopyFrom(const Action_ProgramState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action_ProgramState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Action_ProgramState::Swap(Action_ProgramState* other) {
  if (other != this) {
    std::swap(xml_, other->xml_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Action_ProgramState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_ProgramState_descriptor_;
  metadata.reflection = Action_ProgramState_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Action::kTypeFieldNumber;
const int Action::kStateBeforeActionFieldNumber;
#endif  // !_MSC_VER

Action::Action()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Aseba.ThymioVPL.Action)
}

void Action::InitAsDefaultInstance() {
  statebeforeaction_ = const_cast< ::Aseba::ThymioVPL::Action_ProgramState*>(&::Aseba::ThymioVPL::Action_ProgramState::default_instance());
}

Action::Action(const Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Aseba.ThymioVPL.Action)
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  type_ = 1;
  statebeforeaction_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:Aseba.ThymioVPL.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  if (this != default_instance_) {
    delete statebeforeaction_;
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}

const Action& Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UsageProfile_2eproto();
  return *default_instance_;
}

Action* Action::default_instance_ = NULL;

Action* Action::New() const {
  return new Action;
}

void Action::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    type_ = 1;
    if (has_statebeforeaction()) {
      if (statebeforeaction_ != NULL) statebeforeaction_->::Aseba::ThymioVPL::Action_ProgramState::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Aseba.ThymioVPL.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Aseba.ThymioVPL.Action.ActionType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Aseba::ThymioVPL::Action_ActionType_IsValid(value)) {
            set_type(static_cast< ::Aseba::ThymioVPL::Action_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_stateBeforeAction;
        break;
      }

      // required .Aseba.ThymioVPL.Action.ProgramState stateBeforeAction = 2;
      case 2: {
        if (tag == 18) {
         parse_stateBeforeAction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statebeforeaction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Aseba.ThymioVPL.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Aseba.ThymioVPL.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Aseba.ThymioVPL.Action)
  // required .Aseba.ThymioVPL.Action.ActionType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required .Aseba.ThymioVPL.Action.ProgramState stateBeforeAction = 2;
  if (has_statebeforeaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->statebeforeaction(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Aseba.ThymioVPL.Action)
}

::google::protobuf::uint8* Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Aseba.ThymioVPL.Action)
  // required .Aseba.ThymioVPL.Action.ActionType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required .Aseba.ThymioVPL.Action.ProgramState stateBeforeAction = 2;
  if (has_statebeforeaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->statebeforeaction(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Aseba.ThymioVPL.Action)
  return target;
}

int Action::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .Aseba.ThymioVPL.Action.ActionType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // required .Aseba.ThymioVPL.Action.ProgramState stateBeforeAction = 2;
    if (has_statebeforeaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->statebeforeaction());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_statebeforeaction()) {
      mutable_statebeforeaction()->::Aseba::ThymioVPL::Action_ProgramState::MergeFrom(from.statebeforeaction());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_statebeforeaction()) {
    if (!this->statebeforeaction().IsInitialized()) return false;
  }
  return true;
}

void Action::Swap(Action* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(statebeforeaction_, other->statebeforeaction_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_descriptor_;
  metadata.reflection = Action_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Usage::kActionFieldNumber;
#endif  // !_MSC_VER

Usage::Usage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Aseba.ThymioVPL.Usage)
}

void Usage::InitAsDefaultInstance() {
}

Usage::Usage(const Usage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Aseba.ThymioVPL.Usage)
}

void Usage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Usage::~Usage() {
  // @@protoc_insertion_point(destructor:Aseba.ThymioVPL.Usage)
  SharedDtor();
}

void Usage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Usage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Usage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Usage_descriptor_;
}

const Usage& Usage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UsageProfile_2eproto();
  return *default_instance_;
}

Usage* Usage::default_instance_ = NULL;

Usage* Usage::New() const {
  return new Usage;
}

void Usage::Clear() {
  action_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Usage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Aseba.ThymioVPL.Usage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Aseba.ThymioVPL.Action action = 1;
      case 1: {
        if (tag == 10) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_action;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Aseba.ThymioVPL.Usage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Aseba.ThymioVPL.Usage)
  return false;
#undef DO_
}

void Usage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Aseba.ThymioVPL.Usage)
  // repeated .Aseba.ThymioVPL.Action action = 1;
  for (int i = 0; i < this->action_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->action(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Aseba.ThymioVPL.Usage)
}

::google::protobuf::uint8* Usage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Aseba.ThymioVPL.Usage)
  // repeated .Aseba.ThymioVPL.Action action = 1;
  for (int i = 0; i < this->action_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->action(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Aseba.ThymioVPL.Usage)
  return target;
}

int Usage::ByteSize() const {
  int total_size = 0;

  // repeated .Aseba.ThymioVPL.Action action = 1;
  total_size += 1 * this->action_size();
  for (int i = 0; i < this->action_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->action(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Usage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Usage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Usage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Usage::MergeFrom(const Usage& from) {
  GOOGLE_CHECK_NE(&from, this);
  action_.MergeFrom(from.action_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Usage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Usage::CopyFrom(const Usage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Usage::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->action())) return false;
  return true;
}

void Usage::Swap(Usage* other) {
  if (other != this) {
    action_.Swap(&other->action_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Usage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Usage_descriptor_;
  metadata.reflection = Usage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ThymioVPL
}  // namespace Aseba

// @@protoc_insertion_point(global_scope)

#endif