// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UsageProfile.proto
#ifdef PROTOBUF_FOUND
#ifndef PROTOBUF_UsageProfile_2eproto__INCLUDED
#define PROTOBUF_UsageProfile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Aseba {
namespace ThymioVPL {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UsageProfile_2eproto();
void protobuf_AssignDesc_UsageProfile_2eproto();
void protobuf_ShutdownFile_UsageProfile_2eproto();

class Action;
class Action_ProgramState;
class Usage;

enum Action_ActionType {
  Action_ActionType_LOAD = 1,
  Action_ActionType_SAVE = 2
};
bool Action_ActionType_IsValid(int value);
const Action_ActionType Action_ActionType_ActionType_MIN = Action_ActionType_LOAD;
const Action_ActionType Action_ActionType_ActionType_MAX = Action_ActionType_SAVE;
const int Action_ActionType_ActionType_ARRAYSIZE = Action_ActionType_ActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Action_ActionType_descriptor();
inline const ::std::string& Action_ActionType_Name(Action_ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Action_ActionType_descriptor(), value);
}
inline bool Action_ActionType_Parse(
    const ::std::string& name, Action_ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action_ActionType>(
    Action_ActionType_descriptor(), name, value);
}
// ===================================================================

class Action_ProgramState : public ::google::protobuf::Message {
 public:
  Action_ProgramState();
  virtual ~Action_ProgramState();

  Action_ProgramState(const Action_ProgramState& from);

  inline Action_ProgramState& operator=(const Action_ProgramState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action_ProgramState& default_instance();

  void Swap(Action_ProgramState* other);

  // implements Message ----------------------------------------------

  Action_ProgramState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action_ProgramState& from);
  void MergeFrom(const Action_ProgramState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string xml = 1;
  inline bool has_xml() const;
  inline void clear_xml();
  static const int kXmlFieldNumber = 1;
  inline const ::std::string& xml() const;
  inline void set_xml(const ::std::string& value);
  inline void set_xml(const char* value);
  inline void set_xml(const char* value, size_t size);
  inline ::std::string* mutable_xml();
  inline ::std::string* release_xml();
  inline void set_allocated_xml(::std::string* xml);

  // @@protoc_insertion_point(class_scope:Aseba.ThymioVPL.Action.ProgramState)
 private:
  inline void set_has_xml();
  inline void clear_has_xml();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* xml_;
  friend void  protobuf_AddDesc_UsageProfile_2eproto();
  friend void protobuf_AssignDesc_UsageProfile_2eproto();
  friend void protobuf_ShutdownFile_UsageProfile_2eproto();

  void InitAsDefaultInstance();
  static Action_ProgramState* default_instance_;
};
// -------------------------------------------------------------------

class Action : public ::google::protobuf::Message {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  Action* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Action_ProgramState ProgramState;

  typedef Action_ActionType ActionType;
  static const ActionType LOAD = Action_ActionType_LOAD;
  static const ActionType SAVE = Action_ActionType_SAVE;
  static inline bool ActionType_IsValid(int value) {
    return Action_ActionType_IsValid(value);
  }
  static const ActionType ActionType_MIN =
    Action_ActionType_ActionType_MIN;
  static const ActionType ActionType_MAX =
    Action_ActionType_ActionType_MAX;
  static const int ActionType_ARRAYSIZE =
    Action_ActionType_ActionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionType_descriptor() {
    return Action_ActionType_descriptor();
  }
  static inline const ::std::string& ActionType_Name(ActionType value) {
    return Action_ActionType_Name(value);
  }
  static inline bool ActionType_Parse(const ::std::string& name,
      ActionType* value) {
    return Action_ActionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .Aseba.ThymioVPL.Action.ActionType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Aseba::ThymioVPL::Action_ActionType type() const;
  inline void set_type(::Aseba::ThymioVPL::Action_ActionType value);

  // required .Aseba.ThymioVPL.Action.ProgramState stateBeforeAction = 2;
  inline bool has_statebeforeaction() const;
  inline void clear_statebeforeaction();
  static const int kStateBeforeActionFieldNumber = 2;
  inline const ::Aseba::ThymioVPL::Action_ProgramState& statebeforeaction() const;
  inline ::Aseba::ThymioVPL::Action_ProgramState* mutable_statebeforeaction();
  inline ::Aseba::ThymioVPL::Action_ProgramState* release_statebeforeaction();
  inline void set_allocated_statebeforeaction(::Aseba::ThymioVPL::Action_ProgramState* statebeforeaction);

  // @@protoc_insertion_point(class_scope:Aseba.ThymioVPL.Action)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_statebeforeaction();
  inline void clear_has_statebeforeaction();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Aseba::ThymioVPL::Action_ProgramState* statebeforeaction_;
  int type_;
  friend void  protobuf_AddDesc_UsageProfile_2eproto();
  friend void protobuf_AssignDesc_UsageProfile_2eproto();
  friend void protobuf_ShutdownFile_UsageProfile_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// -------------------------------------------------------------------

class Usage : public ::google::protobuf::Message {
 public:
  Usage();
  virtual ~Usage();

  Usage(const Usage& from);

  inline Usage& operator=(const Usage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Usage& default_instance();

  void Swap(Usage* other);

  // implements Message ----------------------------------------------

  Usage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Usage& from);
  void MergeFrom(const Usage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Aseba.ThymioVPL.Action action = 1;
  inline int action_size() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline const ::Aseba::ThymioVPL::Action& action(int index) const;
  inline ::Aseba::ThymioVPL::Action* mutable_action(int index);
  inline ::Aseba::ThymioVPL::Action* add_action();
  inline const ::google::protobuf::RepeatedPtrField< ::Aseba::ThymioVPL::Action >&
      action() const;
  inline ::google::protobuf::RepeatedPtrField< ::Aseba::ThymioVPL::Action >*
      mutable_action();

  // @@protoc_insertion_point(class_scope:Aseba.ThymioVPL.Usage)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Aseba::ThymioVPL::Action > action_;
  friend void  protobuf_AddDesc_UsageProfile_2eproto();
  friend void protobuf_AssignDesc_UsageProfile_2eproto();
  friend void protobuf_ShutdownFile_UsageProfile_2eproto();

  void InitAsDefaultInstance();
  static Usage* default_instance_;
};
// ===================================================================


// ===================================================================

// Action_ProgramState

// required string xml = 1;
inline bool Action_ProgramState::has_xml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Action_ProgramState::set_has_xml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Action_ProgramState::clear_has_xml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Action_ProgramState::clear_xml() {
  if (xml_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xml_->clear();
  }
  clear_has_xml();
}
inline const ::std::string& Action_ProgramState::xml() const {
  // @@protoc_insertion_point(field_get:Aseba.ThymioVPL.Action.ProgramState.xml)
  return *xml_;
}
inline void Action_ProgramState::set_xml(const ::std::string& value) {
  set_has_xml();
  if (xml_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xml_ = new ::std::string;
  }
  xml_->assign(value);
  // @@protoc_insertion_point(field_set:Aseba.ThymioVPL.Action.ProgramState.xml)
}
inline void Action_ProgramState::set_xml(const char* value) {
  set_has_xml();
  if (xml_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xml_ = new ::std::string;
  }
  xml_->assign(value);
  // @@protoc_insertion_point(field_set_char:Aseba.ThymioVPL.Action.ProgramState.xml)
}
inline void Action_ProgramState::set_xml(const char* value, size_t size) {
  set_has_xml();
  if (xml_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xml_ = new ::std::string;
  }
  xml_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Aseba.ThymioVPL.Action.ProgramState.xml)
}
inline ::std::string* Action_ProgramState::mutable_xml() {
  set_has_xml();
  if (xml_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    xml_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Aseba.ThymioVPL.Action.ProgramState.xml)
  return xml_;
}
inline ::std::string* Action_ProgramState::release_xml() {
  clear_has_xml();
  if (xml_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = xml_;
    xml_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Action_ProgramState::set_allocated_xml(::std::string* xml) {
  if (xml_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete xml_;
  }
  if (xml) {
    set_has_xml();
    xml_ = xml;
  } else {
    clear_has_xml();
    xml_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Aseba.ThymioVPL.Action.ProgramState.xml)
}

// -------------------------------------------------------------------

// Action

// required .Aseba.ThymioVPL.Action.ActionType type = 1;
inline bool Action::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Action::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Action::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Action::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::Aseba::ThymioVPL::Action_ActionType Action::type() const {
  // @@protoc_insertion_point(field_get:Aseba.ThymioVPL.Action.type)
  return static_cast< ::Aseba::ThymioVPL::Action_ActionType >(type_);
}
inline void Action::set_type(::Aseba::ThymioVPL::Action_ActionType value) {
  assert(::Aseba::ThymioVPL::Action_ActionType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Aseba.ThymioVPL.Action.type)
}

// required .Aseba.ThymioVPL.Action.ProgramState stateBeforeAction = 2;
inline bool Action::has_statebeforeaction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Action::set_has_statebeforeaction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Action::clear_has_statebeforeaction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Action::clear_statebeforeaction() {
  if (statebeforeaction_ != NULL) statebeforeaction_->::Aseba::ThymioVPL::Action_ProgramState::Clear();
  clear_has_statebeforeaction();
}
inline const ::Aseba::ThymioVPL::Action_ProgramState& Action::statebeforeaction() const {
  // @@protoc_insertion_point(field_get:Aseba.ThymioVPL.Action.stateBeforeAction)
  return statebeforeaction_ != NULL ? *statebeforeaction_ : *default_instance_->statebeforeaction_;
}
inline ::Aseba::ThymioVPL::Action_ProgramState* Action::mutable_statebeforeaction() {
  set_has_statebeforeaction();
  if (statebeforeaction_ == NULL) statebeforeaction_ = new ::Aseba::ThymioVPL::Action_ProgramState;
  // @@protoc_insertion_point(field_mutable:Aseba.ThymioVPL.Action.stateBeforeAction)
  return statebeforeaction_;
}
inline ::Aseba::ThymioVPL::Action_ProgramState* Action::release_statebeforeaction() {
  clear_has_statebeforeaction();
  ::Aseba::ThymioVPL::Action_ProgramState* temp = statebeforeaction_;
  statebeforeaction_ = NULL;
  return temp;
}
inline void Action::set_allocated_statebeforeaction(::Aseba::ThymioVPL::Action_ProgramState* statebeforeaction) {
  delete statebeforeaction_;
  statebeforeaction_ = statebeforeaction;
  if (statebeforeaction) {
    set_has_statebeforeaction();
  } else {
    clear_has_statebeforeaction();
  }
  // @@protoc_insertion_point(field_set_allocated:Aseba.ThymioVPL.Action.stateBeforeAction)
}

// -------------------------------------------------------------------

// Usage

// repeated .Aseba.ThymioVPL.Action action = 1;
inline int Usage::action_size() const {
  return action_.size();
}
inline void Usage::clear_action() {
  action_.Clear();
}
inline const ::Aseba::ThymioVPL::Action& Usage::action(int index) const {
  // @@protoc_insertion_point(field_get:Aseba.ThymioVPL.Usage.action)
  return action_.Get(index);
}
inline ::Aseba::ThymioVPL::Action* Usage::mutable_action(int index) {
  // @@protoc_insertion_point(field_mutable:Aseba.ThymioVPL.Usage.action)
  return action_.Mutable(index);
}
inline ::Aseba::ThymioVPL::Action* Usage::add_action() {
  // @@protoc_insertion_point(field_add:Aseba.ThymioVPL.Usage.action)
  return action_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Aseba::ThymioVPL::Action >&
Usage::action() const {
  // @@protoc_insertion_point(field_list:Aseba.ThymioVPL.Usage.action)
  return action_;
}
inline ::google::protobuf::RepeatedPtrField< ::Aseba::ThymioVPL::Action >*
Usage::mutable_action() {
  // @@protoc_insertion_point(field_mutable_list:Aseba.ThymioVPL.Usage.action)
  return &action_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ThymioVPL
}  // namespace Aseba

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Aseba::ThymioVPL::Action_ActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Aseba::ThymioVPL::Action_ActionType>() {
  return ::Aseba::ThymioVPL::Action_ActionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UsageProfile_2eproto__INCLUDED

#endif
