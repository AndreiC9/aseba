From cf61fb1a224d897c70abf8f29d72cc8b6933b073 Mon Sep 17 00:00:00 2001
From: Corentin Jabot <corentin.jabot@mobsya.org>
Date: Wed, 7 Mar 2018 11:05:56 +0100
Subject: [PATCH 2/2] Revert "Revert "Remove Blockly plugin. (#733)""

This reverts commit 3a66541159e4c9c23b92204fc1fb1041d14a7811.
---
 .gitmodules                                        |   4 -
 clients/studio/PluginRegistry.cpp                  |   2 -
 clients/studio/plugins/CMakeLists.txt              |   3 -
 .../ThymioBlockly/AsebaJavascriptInterface.h       |  50 --
 .../studio/plugins/ThymioBlockly/ThymioBlockly.cpp | 532 ---------------------
 .../studio/plugins/ThymioBlockly/ThymioBlockly.h   | 135 ------
 clients/studio/plugins/ThymioBlockly/blockly       |   1 -
 maintainer/translations/01_new_language.py         |   2 +-
 .../translations/03_sync_all_translations.py       |   2 +-
 maintainer/translations/path.py                    |   1 -
 rpm/aseba.spec                                     |  10 +-
 11 files changed, 5 insertions(+), 737 deletions(-)
 delete mode 100644 clients/studio/plugins/ThymioBlockly/AsebaJavascriptInterface.h
 delete mode 100644 clients/studio/plugins/ThymioBlockly/ThymioBlockly.cpp
 delete mode 100644 clients/studio/plugins/ThymioBlockly/ThymioBlockly.h
 delete mode 160000 clients/studio/plugins/ThymioBlockly/blockly

diff --git a/.gitmodules b/.gitmodules
index d73213ce..e69de29b 100644
--- a/.gitmodules
+++ b/.gitmodules
@@ -1,4 +0,0 @@
-[submodule "blockly"]
-	path = clients/studio/plugins/ThymioBlockly/blockly
-	url = https://github.com/aseba-community/blockly.git
-	branch = aseba-1.6
diff --git a/clients/studio/PluginRegistry.cpp b/clients/studio/PluginRegistry.cpp
index c964b403..0d012d5d 100644
--- a/clients/studio/PluginRegistry.cpp
+++ b/clients/studio/PluginRegistry.cpp
@@ -32,7 +32,6 @@
 #include "plugins/VariablesViewPlugin.h"
 #include "plugins/StopThymioPlugin.h"
 #include "plugins/ThymioVPL/ThymioVisualProgramming.h"
-#include "plugins/ThymioBlockly/ThymioBlockly.h"
 
 namespace Aseba
 {	
@@ -105,7 +104,6 @@ namespace Aseba
 		linearCameraPids << ASEBA_PID_CHALLENGE << ASEBA_PID_PLAYGROUND_EPUCK << ASEBA_PID_EPUCK << ASEBA_PID_SMARTROB;
 		reg("LinearCameraViewPlugin", linearCameraPids, &createInstance<LinearCameraViewPlugin>);
 		reg("ThymioVisualProgramming", ASEBA_PID_THYMIO2, &createInstance<ThymioVPL::ThymioVisualProgramming>);
-		reg("ThymioBlockly", ASEBA_PID_THYMIO2, &createInstance<ThymioBlockly::ThymioBlockly>);
 		reg("StopThymioPlugin", ASEBA_PID_THYMIO2, &createInstance<StopThymioPlugin>);
 	}
 	
diff --git a/clients/studio/plugins/CMakeLists.txt b/clients/studio/plugins/CMakeLists.txt
index 6b43b467..72330b01 100644
--- a/clients/studio/plugins/CMakeLists.txt
+++ b/clients/studio/plugins/CMakeLists.txt
@@ -15,7 +15,6 @@ set(qt_plugins_SRCS
 	ThymioVPL/Style.cpp
 	ThymioVPL/Utils.cpp
 	ThymioVPL/LogSignalMapper.cpp
-	ThymioBlockly/ThymioBlockly.cpp
 )
 qt4_wrap_cpp(qt_plugins_MOCS
 	VariablesViewPlugin.h
@@ -30,8 +29,6 @@ qt4_wrap_cpp(qt_plugins_MOCS
 	ThymioVPL/Scene.h
 	ThymioVPL/UsageLogger.h
 	ThymioVPL/LogSignalMapper.h
-	ThymioBlockly/ThymioBlockly.h
-	ThymioBlockly/AsebaJavascriptInterface.h
 )
 
 if (PROTOBUF_FOUND AND PROTOBUF_PROTOC_EXECUTABLE)
diff --git a/clients/studio/plugins/ThymioBlockly/AsebaJavascriptInterface.h b/clients/studio/plugins/ThymioBlockly/AsebaJavascriptInterface.h
deleted file mode 100644
index 38d66987..00000000
--- a/clients/studio/plugins/ThymioBlockly/AsebaJavascriptInterface.h
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
-	Aseba - an event-based framework for distributed robot control
-	Copyright (C) 2007--2016:
-		Stephane Magnenat <stephane at magnenat dot net>
-		(http://stephane.magnenat.net)
-		and other contributors, see authors.txt for details
-
-	This program is free software: you can redistribute it and/or modify
-	it under the terms of the GNU Lesser General Public License as published
-	by the Free Software Foundation, version 3 of the License.
-
-	This program is distributed in the hope that it will be useful,
-	but WITHOUT ANY WARRANTY; without even the implied warranty of
-	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-	GNU Lesser General Public License for more details.
-
-	You should have received a copy of the GNU Lesser General Public License
-	along with this program. If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef ASEBA_JAVASCRIPT_INTERFACE_H
-#define ASEBA_JAVASCRIPT_INTERFACE_H
-
-#include <QObject>
-
-namespace Aseba { namespace ThymioBlockly
-{
-	/** \addtogroup studio */
-	/*@{*/
-	class AsebaJavascriptInterface : public QObject
-	{
-		Q_OBJECT
-
-		public:
-			void requestReset() { emit reset(); }
-			void requestLoad(const QString& xml) { emit load(xml); }
-			void requestSave() { emit save(); }
-
-		signals:
-			void reset();
-			void load(const QString& xml);
-			void save();
-			void compiled(const QString& code);
-			void saved(const QString& xml);
-	};
-
-	/*@}*/
-} } // namespace ThymioBlockly / namespace Aseba
-
-#endif
diff --git a/clients/studio/plugins/ThymioBlockly/ThymioBlockly.cpp b/clients/studio/plugins/ThymioBlockly/ThymioBlockly.cpp
deleted file mode 100644
index 260f0e59..00000000
--- a/clients/studio/plugins/ThymioBlockly/ThymioBlockly.cpp
+++ /dev/null
@@ -1,532 +0,0 @@
-/*
-	Aseba - an event-based framework for distributed robot control
-	Copyright (C) 2007--2016:
-		Stephane Magnenat <stephane at magnenat dot net>
-		(http://stephane.magnenat.net)
-		and other contributors, see authors.txt for details
-	
-	This program is free software: you can redistribute it and/or modify
-	it under the terms of the GNU Lesser General Public License as published
-	by the Free Software Foundation, version 3 of the License.
-	
-	This program is distributed in the hope that it will be useful,
-	but WITHOUT ANY WARRANTY; without even the implied warranty of
-	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-	GNU Lesser General Public License for more details.
-	
-	You should have received a copy of the GNU Lesser General Public License
-	along with this program. If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include <QCloseEvent>
-#include <QMessageBox>
-#include <QPushButton>
-#include <QComboBox>
-#include <QLabel>
-#include <QSizePolicy>
-#include <QFileDialog>
-#include <QFile>
-#include <QDomElement>
-#include <QDesktopWidget>
-#include <QApplication>
-#include <QScrollBar>
-#include <QAction>
-#include <QUrl>
-#include <QDesktopServices>
-#include <QSettings>
-#include <QImageReader>
-#include <QFileInfo>
-#include <QDir>
-#include <QtDebug>
-#include <QSvgRenderer>
-#include <QWebPage>
-#include <QWebFrame>
-
-#include "ThymioBlockly.h"
-
-#include "../../TargetModels.h"
-#include "../../../../common/utils/utils.h"
-#include "../../../../common/about/AboutDialog.h"
-
-using namespace std;
-
-QPixmap pixmapFromSVG(const QString& fileName, int size)
-{
-	QSvgRenderer renderer(fileName);
-	QPixmap pixmap(size, size);
-	pixmap.fill(Qt::transparent);
-	QPainter painter(&pixmap);
-	renderer.render(&painter);
-	return pixmap;
-}
-
-namespace Aseba { namespace ThymioBlockly
-{
-	// Visual Programming
-	ThymioBlockly::ThymioBlockly(DevelopmentEnvironmentInterface *_de, bool showCloseButton, bool debugLog, bool execFeedback):
-		de(_de),
-		webview(new QWebView(this)),
-		skipNextUpdate(false)
-	{
-		// Create the gui ...
-		setWindowTitle(tr("Thymio Blockly Interface"));
-		setMinimumSize(QSize(400,400));
-		
-		mainLayout = new QVBoxLayout(this);
-		
-		toolLayout = new  QHBoxLayout();
-		//toolLayout->setHorizontalSpacing(0);
-		//toolLayout->setVerticalSpacing(0);
-		mainLayout->addLayout(toolLayout);
-		// add back the spacing we removed
-		mainLayout->addSpacing(style()->pixelMetric(QStyle::PM_LayoutVerticalSpacing));
-
-		newButton = new QPushButton();
-		newButton->setIcon(QIcon(":/images/icons/filenew.svgz"));
-		newButton->setToolTip(tr("New"));
-		newButton->setFlat(true);
-		newButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(newButton);
-		
-		openButton = new QPushButton();
-		openButton->setIcon(QIcon(":/images/icons/fileopen.svgz"));
-		openButton->setToolTip(tr("Open"));
-		openButton->setFlat(true);
-		openButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(openButton);
-		
-		saveButton = new QPushButton();
-		saveButton->setIcon(QIcon(":/images/icons/save.svgz"));
-		saveButton->setToolTip(tr("Save"));
-		saveButton->setFlat(true);
-		saveButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(saveButton);
-		
-		saveAsButton = new QPushButton();
-		saveAsButton->setIcon(QIcon(":/images/icons/saveas.svgz"));
-		saveAsButton->setToolTip(tr("Save as"));
-		saveAsButton->setFlat(true);
-		saveAsButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(saveAsButton);
-		
-		spacer1 = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacer1);
-		
-		firstSeparator = new QFrame();
-		firstSeparator->setFrameShape(QFrame::VLine);
-		firstSeparator->setFrameShadow(QFrame::Sunken);
-		toolLayout->addWidget(firstSeparator);
-		
-		spacer2 = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacer2);
-
-		spacer3 = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacer3);
-
-		runButton = new QPushButton();
-		runButton->setIcon(QIcon(":/images/icons/play.svgz"));
-		runButton->setToolTip(tr("Load & Run"));
-		runButton->setFlat(true);
-		runButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(runButton);
-		
-		spacerRunStop = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacerRunStop);
-
-		stopButton = new QPushButton();
-		stopButton->setIcon(QIcon(":/images/icons/stop.svgz"));
-		stopButton->setToolTip(tr("Stop"));
-		stopButton->setFlat(true);
-		stopButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(stopButton);
-		
-		spacer4 = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacer4);
-		
-		spacer5 = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacer5);
-		
-		secondSeparator = new QFrame();
-		secondSeparator->setFrameShape(QFrame::VLine);
-		secondSeparator->setFrameShadow(QFrame::Sunken);
-		toolLayout->addWidget(secondSeparator);
-		
-		spacer6 = new QSpacerItem(1,1,QSizePolicy::Expanding);
-		toolLayout->addItem(spacer6);
-
-		helpButton = new QPushButton();
-		helpButton->setIcon(QIcon(":/images/icons/info.svgz"));
-		helpButton->setToolTip(tr("Help"));
-		helpButton->setFlat(true);
-		helpButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(helpButton);
-		
-		snapshotButton = new QPushButton();
-		snapshotButton->setIcon(QIcon(":/images/icons/screenshot.svgz"));
-		snapshotButton->setToolTip(tr("Screenshot"));
-		snapshotButton->setFlat(true);
-		snapshotButton->setStyleSheet("QPushButton:pressed { border: 1px solid white }");
-		toolLayout->addWidget(snapshotButton);
-
-		connect(newButton, SIGNAL(clicked()), this, SLOT(newFile()));
-		connect(openButton, SIGNAL(clicked()), this, SLOT(openFile()));
-		connect(saveButton, SIGNAL(clicked()), this, SLOT(save()));
-		connect(saveAsButton, SIGNAL(clicked()), this, SLOT(saveAs()));
-		
-		connect(runButton, SIGNAL(clicked()), this, SLOT(run()));
-		connect(stopButton, SIGNAL(clicked()), this, SLOT(stop()));
-		connect(helpButton, SIGNAL(clicked()), this, SLOT(openHelp()));
-		connect(snapshotButton, SIGNAL(clicked()), this, SLOT(saveSnapshot()));
-		
-		horizontalLayout = new QHBoxLayout();
-		mainLayout->addLayout(horizontalLayout);
-
-		sceneLayout = new QVBoxLayout();
-
-		const QString lang(de->getTarget()->getLanguage().left(2));
-		if(lang == "de") {
-			webview->load(QUrl("qrc:/plugins/ThymioBlockly/blockly/tests/asebastudio.de.html"));
-        } else if(lang == "fr") {
-			webview->load(QUrl("qrc:/plugins/ThymioBlockly/blockly/tests/asebastudio.fr.html"));
-		} else if(lang == "es") {
-			webview->load(QUrl("qrc:/plugins/ThymioBlockly/blockly/tests/asebastudio.es.html"));
-		} else if(lang == "it") {
-			webview->load(QUrl("qrc:/plugins/ThymioBlockly/blockly/tests/asebastudio.it.html"));
-		} else {
-			webview->load(QUrl("qrc:/plugins/ThymioBlockly/blockly/tests/asebastudio.html"));
-		}
-		webview->setRenderHints(QPainter::Antialiasing | QPainter::HighQualityAntialiasing | QPainter::NonCosmeticDefaultPen | QPainter::SmoothPixmapTransform | QPainter::TextAntialiasing);
-		webview->setContextMenuPolicy(Qt::CustomContextMenu);
-
-		QWebPage *page = webview->page();
-		QWebFrame *frame = page->mainFrame();
-		connect(frame, SIGNAL(javaScriptWindowObjectCleared()), this, SLOT(initAsebaJavascriptInterface()));
-		connect(&asebaJavascriptInterface, SIGNAL(compiled(const QString&)), this, SLOT(codeUpdated(const QString&)));
-		connect(&asebaJavascriptInterface, SIGNAL(saved(const QString&)), this, SLOT(workspaceSaved(const QString&)));
-		connect(webview, SIGNAL(loadFinished(bool)), this, SLOT(blocklyLoaded()));
-
-		sceneLayout->addWidget(webview);
-
-		horizontalLayout->addLayout(sceneLayout);
-
-		// window properties
-		setWindowModality(Qt::ApplicationModal);
-		setWindowIcon(QIcon(":/images/icons/thymioblockly.svgz"));
-	}
-	
-	ThymioBlockly::~ThymioBlockly()
-	{
-		saveGeometryIfVisible();
-	}
-	
-	void ThymioBlockly::openHelp() const
-	{
-		const AboutBox::Parameters aboutParameters = {
-			"Thymio Blockly",
-			":/images/icons/thymioblockly.svgz",
-			tr("Blockly for Thymio robot allows to program by visually assembling elements.\nBlockly is a <a href=\"https://developers.google.com/blockly/\">third-party software from Google</a>."),
-			tr("http://aseba.wikidot.com/en:blocklyprogramming"),
-			"",
-			{ "core", "blockly", "packaging", "translation" }
-		};
-		// we use nullptr here as parent might disappear under our eyes if the Thymio node gets disconnected
-		AboutBox aboutBox(nullptr, aboutParameters);
-		
-		aboutBox.exec();
-	}
-	
-	void ThymioBlockly::saveSnapshot() const
-	{
-		QSettings settings;
-		
-		QString initialFileName(settings.value("ThymioVPL/snapshotFileName", QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation)).toString());
-		if (initialFileName.isEmpty() && !de->openedFileName().isEmpty())
-		{
-			const QFileInfo pf(de->openedFileName());
-			initialFileName = (pf.absolutePath() + QDir::separator() + pf.baseName() + ".png");
-		}
-		QString selectedFilter;
-		QString fileName(QFileDialog::getSaveFileName(0,
-			tr("Export program as image"), initialFileName, "Images (*.png *.jpg *.bmp *.ppm *.tiff)", &selectedFilter));
-		
-		if (fileName.isEmpty())
-			return;
-		
-		// save file name to settings
-		settings.setValue("ThymioBlockly/snapshotFileName", fileName);
-
-		// image
-		if (fileName.lastIndexOf(".") < 0)
-			fileName += ".png";
-		
-		QImage image(webview->rect().size(), QImage::Format_ARGB32_Premultiplied);
-		{ // paint into image
-			QPainter painter(&image);
-			webview->render(&painter);
-		}
-		image.save(fileName);
-	}
-		
-	QWidget* ThymioBlockly::createMenuEntry()
-	{
-		QPushButton *vplButton = new QPushButton(QIcon(":/images/icons/thymioblockly.svgz"), tr("Launch Blockly"));
-		vplButton->setIconSize(QSize(32,32));
-		connect(vplButton, SIGNAL(clicked()), SLOT(newFile()));
-		return vplButton;
-	}
-	
-	void ThymioBlockly::closeAsSoonAsPossible()
-	{
-		close();
-	}
-	
-	//! prevent recursion of changes triggered by VPL itself
-	void ThymioBlockly::clearSceneWithoutRecompilation()
-	{
-		skipNextUpdate = true;
-		asebaJavascriptInterface.requestReset();
-	}
-	
-	void ThymioBlockly::showAtSavedPosition()
-	{
-		QSettings settings;
-		restoreGeometry(settings.value("ThymioBlockly/geometry").toByteArray());
-		QWidget::show();
-	}
-
-	void ThymioBlockly::newFile()
-	{
-		if(de->newFile())
-		{
-			asebaJavascriptInterface.requestReset();
-			showAtSavedPosition();
-		}
-	}
-
-	void ThymioBlockly::openFile()
-	{
-		de->openFile();
-	}
-	
-	bool ThymioBlockly::save()
-	{
-		asebaJavascriptInterface.requestSave();
-		de->saveFile(false);
-		return true;
-	}
-	
-	bool ThymioBlockly::saveAs()
-	{
-		asebaJavascriptInterface.requestSave();
-		de->saveFile(true);
-		return true;
-	}
-
-	bool ThymioBlockly::closeFile()
-	{
-		if(!isVisible()) {
-			return true;
-		}
-		
-		if(preDiscardWarningDialog(true))
-		{
-			de->clearOpenedFileName(true);
-			clearSceneWithoutRecompilation();
-			return true;
-		}
-		else
-		{
-			de->clearOpenedFileName(true);
-			return false;
-		}
-	}
-	
-	void ThymioBlockly::run()
-	{
-		if(runButton->isEnabled())
-		{
-			de->loadAndRun();
-		}
-	}
-
-	void ThymioBlockly::stop()
-	{
-		de->stop();
-		const unsigned leftSpeedVarPos = de->getVariablesModel()->getVariablePos("motor.left.target");
-		de->setVariableValues(leftSpeedVarPos, VariablesDataVector(1, 0));
-		const unsigned rightSpeedVarPos = de->getVariablesModel()->getVariablePos("motor.right.target");
-		de->setVariableValues(rightSpeedVarPos, VariablesDataVector(1, 0));
-	}
-	
-	void ThymioBlockly::initAsebaJavascriptInterface()
-	{
-		QWebPage *page = webview->page();
-		QWebFrame *frame = page->mainFrame();
-		frame->addToJavaScriptWindowObject("asebaJavascriptInterface", &asebaJavascriptInterface);
-	}
-
-	void ThymioBlockly::codeUpdated(const QString& code)
-	{
-		if(skipNextUpdate) {
-			skipNextUpdate = false;
-		} else {
-			de->displayCode(QStringList() << code, 0);
-		}
-	}
-
-	void ThymioBlockly::workspaceSaved(const QString& xml)
-	{
-		currentSavedXml = xml;
-	}
-
-	void ThymioBlockly::blocklyLoaded()
-	{
-		if (!currentSavedXml.isEmpty())
-		{
-			asebaJavascriptInterface.requestLoad(currentSavedXml);
-		}
-	}
-
-	void ThymioBlockly::closeEvent ( QCloseEvent * event )
-	{
-		if (!closeFile())
-			event->ignore();
-		else
-			saveGeometryIfVisible();
-	}
-	
-	void ThymioBlockly::saveGeometryIfVisible()
-	{
-		if (isVisible())
-		{
-			QSettings settings;
-			settings.setValue("ThymioBlockly/geometry", saveGeometry());
-		}
-	}
-	
-	bool ThymioBlockly::preDiscardWarningDialog(bool keepCode)
-	{
-		QMessageBox msgBox;
-		msgBox.setWindowTitle(tr("Warning"));
-		msgBox.setText(tr("The Blockly document has been modified.<p>Do you want to save the changes?"));
-		msgBox.setStandardButtons(QMessageBox::Save | QMessageBox::Discard | QMessageBox::Cancel);
-		msgBox.setDefaultButton(QMessageBox::Save);
-		
-		int ret = msgBox.exec();
-		switch (ret)
-		{
-			case QMessageBox::Save:
-			{
-				if (save())
-					return true;
-				else
-					return false;
-			}
-			case QMessageBox::Discard:
-			{
-				return true;
-			}
-			case QMessageBox::Cancel:
-			default:
-				return false;
-		}
-
-		return false;
-	}
-	
-	QDomDocument ThymioBlockly::saveToDom() const
-	{
-		asebaJavascriptInterface.requestSave();
-		if (currentSavedXml.isEmpty() || currentSavedXml == "<xml></xml>") {
-			return QDomDocument();
-		}
-		else {
-			QDomDocument document("tool-plugin-data");
-			if (document.setContent(currentSavedXml)) {
-				return document;
-			}
-			else {
-				// this is an error - I'm not sure if it still occurs under any circumstance, but if it does, some diagnostic output may be helpful
-				printf("ThymioBlockly::saveToDom(): invalid XML content\n%s\n", currentSavedXml.toUtf8().constData());
-				// document is in an invalid state now that would make MainWindow::saveFile crash, return a null document instead
-				return QDomDocument();
-			}
-		}
-	}
-	
-	void ThymioBlockly::aboutToLoad()
-	{
-		saveGeometryIfVisible();
-		hide();
-	}
-
-	void ThymioBlockly::loadFromDom(const QDomDocument& document, bool fromFile)
-	{
-		currentSavedXml = document.toString();
-
-		// remove <!DOCTYPE tool-plugin-data>, blockly can't handle it...
-		currentSavedXml.remove("<!DOCTYPE tool-plugin-data>");
-		
-		asebaJavascriptInterface.requestLoad(currentSavedXml);
-		
-		showAtSavedPosition();
-	}
-	
-	void ThymioBlockly::codeChangedInEditor()
-	{
-		if(!isVisible())
-		{
-			clearSceneWithoutRecompilation();
-		}
-	}
-	
-	bool ThymioBlockly::isModified() const
-	{
-		return false;
-	}
-	
-	qreal ThymioBlockly::getViewScale() const
-	{
-		return 1.0;
-	}
-	
-	void ThymioBlockly::resizeEvent( QResizeEvent *event)
-	{
-		// compute size of elements for toolbar
-		const float toolbarWidgetCount(16);
-		// get width of combox box element (not content)
-		int desiredIconSize((
-			event->size().width() -
-			(
-				/*(toolbarWidgetCount-1) * 2 * style()->pixelMetric(QStyle::PM_DefaultFrameWidth) + */
-				toolbarWidgetCount * 2 * style()->pixelMetric(QStyle::PM_ButtonMargin) +
-				style()->pixelMetric(QStyle::PM_LayoutLeftMargin) +
-				style()->pixelMetric(QStyle::PM_LayoutRightMargin) +
-				6 // vertical lines
-				/*#ifdef Q_WS_MAC
-				55 // safety factor, as it seems that metrics do miss some space
-				#else // Q_WS_MAC
-				20
-				#endif // Q_WS_MAC
-				//20 // safety factor, as it seems that metrics do miss some space*/
-			)
-		) / (toolbarWidgetCount));
-		
-		desiredIconSize = qMin(desiredIconSize, event->size().height()/14);
-		
-		// set toolbar
-		const QSize tbIconSize(QSize(desiredIconSize, desiredIconSize));
-		const QSize importantIconSize(tbIconSize * 1.41);
-		newButton->setIconSize(tbIconSize);
-		openButton->setIconSize(tbIconSize);
-		saveButton->setIconSize(tbIconSize);
-		saveAsButton->setIconSize(tbIconSize);
-		runButton->setIconSize(importantIconSize);
-		stopButton->setIconSize(importantIconSize);
-		helpButton->setIconSize(tbIconSize);
-		snapshotButton->setIconSize(tbIconSize);
-		spacerRunStop->changeSize(desiredIconSize/4, desiredIconSize);
-		toolLayout->invalidate();
-	}
-	
-} } // namespace ThymioVPL / namespace Aseba
diff --git a/clients/studio/plugins/ThymioBlockly/ThymioBlockly.h b/clients/studio/plugins/ThymioBlockly/ThymioBlockly.h
deleted file mode 100644
index eb737616..00000000
--- a/clients/studio/plugins/ThymioBlockly/ThymioBlockly.h
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
-	Aseba - an event-based framework for distributed robot control
-	Copyright (C) 2007--2016:
-		Stephane Magnenat <stephane at magnenat dot net>
-		(http://stephane.magnenat.net)
-		and other contributors, see authors.txt for details
-	
-	This program is free software: you can redistribute it and/or modify
-	it under the terms of the GNU Lesser General Public License as published
-	by the Free Software Foundation, version 3 of the License.
-	
-	This program is distributed in the hope that it will be useful,
-	but WITHOUT ANY WARRANTY; without even the implied warranty of
-	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-	GNU Lesser General Public License for more details.
-	
-	You should have received a copy of the GNU Lesser General Public License
-	along with this program. If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef THYMIO_BLOCKLY_H
-#define THYMIO_BLOCKLY_H
-
-#include <QDialog>
-#include <QVBoxLayout>
-#include <QHBoxLayout>
-#include <QComboBox>
-#include <QToolBar>
-#include <QDomDocument>
-#include <QWebView>
-
-#include <map>
-#include <vector>
-#include <iterator>
-#include <memory>
-
-#include "../../Plugin.h"
-#include "../../DashelTarget.h"
-
-#include "AsebaJavascriptInterface.h"
-
-namespace Aseba { namespace ThymioBlockly
-{
-	/** \addtogroup studio */
-	/*@{*/
-	
-	class ThymioBlockly : public QWidget, public NodeToolInterface
-	{
-		Q_OBJECT
-	
-	public:
-		ThymioBlockly(DevelopmentEnvironmentInterface *_de, bool showCloseButton = true, bool debugLog = false, bool execFeedback = false);
-		~ThymioBlockly();
-		
-		virtual QWidget* createMenuEntry();
-		virtual void closeAsSoonAsPossible();
-
-		virtual void aboutToLoad();
-		virtual void loadFromDom(const QDomDocument& content, bool fromFile);
-		virtual QDomDocument saveToDom() const;
-		virtual void codeChangedInEditor();
-		
-		bool isModified() const;
-		qreal getViewScale() const;
-
-	signals:
-		void modifiedStatusChanged(bool modified);
-		void compilationOutcome(bool success);
-		
-	protected slots:
-		bool closeFile();
-		
-	private slots:
-		void openHelp() const;
-		void saveSnapshot() const;
-		
-		void newFile();
-		void openFile();
-		bool save();
-		bool saveAs();
-		void run();
-		void stop();
-		
-		void initAsebaJavascriptInterface();
-		void codeUpdated(const QString& code);
-		void workspaceSaved(const QString& xml);
-		void blocklyLoaded();
-
-	private:
-		void clearSceneWithoutRecompilation();
-		void showAtSavedPosition();
-		
-	protected:
-		std::unique_ptr<DevelopmentEnvironmentInterface> de;
-		QWebView *webview;
-		mutable AsebaJavascriptInterface asebaJavascriptInterface;
-		QString currentSavedXml;
-		bool skipNextUpdate;
-
-		QToolBar *toolBar;
-		QHBoxLayout *toolLayout;
-		QPushButton *newButton;
-		QPushButton *openButton;
-		QPushButton *saveButton;
-		QPushButton *saveAsButton;
-		QPushButton *runButton;
-		QPushButton *stopButton;
-		QPushButton *helpButton;
-		QPushButton *snapshotButton;
-		QFrame *firstSeparator;
-		QFrame *secondSeparator;
-		QSpacerItem *spacer1;
-		QSpacerItem *spacer2;
-		QSpacerItem *spacer3;
-		QSpacerItem *spacerRunStop;
-		QSpacerItem *spacer4;
-		QSpacerItem *spacer5;
-		QSpacerItem *spacer6;
-		
-		QVBoxLayout *mainLayout;
-		QHBoxLayout *horizontalLayout;
-		QVBoxLayout *sceneLayout;
-		
-	protected:
-		void saveGeometryIfVisible();
-		bool preDiscardWarningDialog(bool keepCode);
-		void closeEvent(QCloseEvent * event);
-		
-		virtual void resizeEvent( QResizeEvent *event );
-	};
-
-	/*@}*/
-} } // namespace ThymioBlockly / namespace Aseba
-
-#endif
diff --git a/clients/studio/plugins/ThymioBlockly/blockly b/clients/studio/plugins/ThymioBlockly/blockly
deleted file mode 160000
index 3b935e3e..00000000
--- a/clients/studio/plugins/ThymioBlockly/blockly
+++ /dev/null
@@ -1 +0,0 @@
-Subproject commit 3b935e3ea4732b768c4edffa7034dc8d31e4b5ba
diff --git a/maintainer/translations/01_new_language.py b/maintainer/translations/01_new_language.py
index 76b99430..d122170a 100755
--- a/maintainer/translations/01_new_language.py
+++ b/maintainer/translations/01_new_language.py
@@ -88,7 +88,7 @@ print "Generating files...\n"
 os.chdir(studio_path)
 
 # lupdate / lrelease asebastudio_x.{ts,qm}
-translation_tools.do_lupdate_lrelease("asebastudio", code, " ".join([studio_path, plugin_path, vpl_path, blockly_path]))
+translation_tools.do_lupdate_lrelease("asebastudio", code, " ".join([studio_path, plugin_path, vpl_path]))
 
 # lupdate / lrelease compiler_x.{ts,qm}
 translation_tools.do_lupdate_lrelease("compiler", code, compiler_ts_path)
diff --git a/maintainer/translations/03_sync_all_translations.py b/maintainer/translations/03_sync_all_translations.py
index ea737a7b..3953a9f3 100755
--- a/maintainer/translations/03_sync_all_translations.py
+++ b/maintainer/translations/03_sync_all_translations.py
@@ -32,7 +32,7 @@ translation_tools.init_commands()
 translation_tools.do_lupdate_lrelease_all(qtabout_path, "qtabout", qtabout_path)
 
 # asebastudio
-translation_tools.do_lupdate_lrelease_all(studio_path, "asebastudio", " ".join([studio_path, plugin_path, vpl_path, blockly_path]))
+translation_tools.do_lupdate_lrelease_all(studio_path, "asebastudio", " ".join([studio_path, plugin_path, vpl_path]))
 
 # compiler
 translation_tools.do_lupdate_lrelease_all(studio_path, "compiler", compiler_ts_path)
diff --git a/maintainer/translations/path.py b/maintainer/translations/path.py
index ffd6de62..2bde9678 100644
--- a/maintainer/translations/path.py
+++ b/maintainer/translations/path.py
@@ -50,7 +50,6 @@ compiler_ts_cpp = os.path.join(compiler_ts_path, 'CompilerTranslator.cpp')
 # path for strings to be translated
 plugin_path = os.path.join(studio_path, "plugins/")
 vpl_path = os.path.join(plugin_path, "ThymioVPL/")
-blockly_path = os.path.join(plugin_path, "ThymioBlockly/")
 
 # path to file that must be updated when adding a new language
 dashel_target = os.path.join(studio_path, "DashelTarget.cpp")
diff --git a/rpm/aseba.spec b/rpm/aseba.spec
index 5b015c29..ba1f1857 100644
--- a/rpm/aseba.spec
+++ b/rpm/aseba.spec
@@ -16,10 +16,6 @@ Version:        %{source_major}.%{source_minor}.%{source_patch}
 # associated with the Catch submodule. Run 'git submodule' to find it.
 %global catchcommit 3b18d9e962835100d7e12ac80d22882e408e40dc
 
-# Update the following line with the git commit has of the revision of blockly
-# associated with the blockly submodule. Run 'git submodule' to find it.
-%global blocklycommit 38e4085359a7b9578d0d5d26e9e291413d97e335
-
 # Update the following line to set commit_is_tagged_as_source_release to 0 if
 # and only if the commit hash is not from a git tag for an existing source
 # release (i.e. it is a commit hash for a pre-release or post-release
@@ -54,7 +50,6 @@ License:        LGPLv3
 URL:            http://aseba.wikidot.com
 Source0:        https://github.com/aseba-community/aseba/archive/%{commit}.tar.gz
 Source1:        https://github.com/philsquared/Catch/archive/%{catchcommit}.tar.gz
-Source2:        https://github.com/aseba-community/blockly/archive/%{blocklycommit}.tar.gz
 Patch0:         aseba-rpm.patch
 
 BuildRequires: ImageMagick
@@ -121,8 +116,6 @@ developing applications that use %{name}.
 %setup -q -T -D -b 2 -n %{name}-%{commit}
 rm -rf tests/externals/Catch
 mv ../Catch-%{catchcommit} tests/externals/Catch
-rm -rf clients/studio/plugins/ThymioBlockly/blockly
-mv ../blockly-%{blocklycommit} clients/studio/plugins/ThymioBlockly/blockly
 %patch0 -p1
 
 %build
@@ -187,6 +180,9 @@ fi
 %{_libdir}/*.so
 
 %changelog
+* Tue Dec 06 2017 Corentin Jabot <corentinjabot@gmail.com> - 1.6.0
+- Remove Blockly plugin
+
 * Mon Jun 13 2016 Dean Brettle <dean@brettle.com> - 1.5.3-4
 - Use libQtWebKit-devel on SUSE
 
-- 
2.16.1

