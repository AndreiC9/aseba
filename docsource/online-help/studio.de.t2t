Studio
Stéphane Magnenat

%! Encoding: utf-8
%!postproc(html): '(aseba)(\s)' '<span style="font-variant: small-caps;">\1</span>\2'
%!postproc(tex): aseba \\textsc{aseba}
%!postproc(html): '(Aseba)(\s)' '<span style="font-variant: small-caps;">\1</span>\2'
%!postproc(tex): Aseba \\textsc{Aseba}
%!postproc(tex): \t '    '

Sehe auch: [Die Programmiersprache Aseba aseba-language.de.html]

Aseba Studio ist die Umgebung, in welcher wir arbeiten und Fehler in den Aseba Befehlen an alle Netzwerkelemente suchen.

= Die Umgebung endecken =

[studio.png]

==== 1. Gleichzeitiges Editieren ====
Innerhalb des Studios, hat jeder Netzwerkpunkt von Aseba sein eigenes Etikett mit Befehlen, Speicherinhalt, Ausführstatus und Fehlersuchkommandos. Als Zugabe ermöglicht eine Werkzeugliste generelle Befehle an alle Netzwerkelemente. Dies erlaubt sowohl eine Gesamtkontrolle über das Netzwerk als auch eine gezielte Kontrolle jedes einzelnen Netzwerkelements.

==== 2. Intelligente Eingabe ====
Die Syntax der Befehle wird im Eingabefeld automatisch farblich hervorgehoben, Absätze eingerückt und Variablen für den Speicher abgekürzt. Ausserdem wird die momentane Position im Modus "Schritt für Schritt" laufend aktualisiert und Fehler werden in rot hervorgehoben.
 
==== 3. Sofortige Kompilierung ====
Studio  kompiliert die Befehle noch während der Benutzer am schreiben ist.
Das Resultat der Kompilierung (Erfolg oder Beschreibung des Fehlers) wird unter dem Eingabefeld angezeigt. Dies ist äusserst nützlich, da die Fehler sofort behoben werden können und damit die Qualität des Codes erhöht wird.

==== 4. Überprüfen der Daten ====
Studio listet die verfügbaren Variablen jedes Netzwerkelemts auf. Mit einem einzigen Klick kann diese Liste aktualisiert werden. Diese Liste gibt einen Gesamtüberblick aller momentanen Werte der Netzwerkelemente.

==== 5. Fehlersucher ====
Studio beinhaltet einen Fehlersucher. Für jedes Netzwerkelement wird der aktuelle Ausführungsstatus angezeigt. Die kontinuierliche Ausführung und Haltepunkte werden Schritt für Schritt unterstützt. Ein Klick mit die rechte Maustaste innerhalb des Befehlseingabefeldes erlaubt es in der ausgewählten Linie, einen Haltepunkt zu setzen oder zu entfernen. Nach jedem Haltepunkt oder Schritt werden die Variablen aktualisiert.

==== 6. Konstanten definieren ====
Es ist möglich, Konstanten für alle vorhandenen Netzwerkelemente zu definieren.

==== 7. Network-wide events ====
Die Namen der Ereignisse können vom Benutzer selbst definiert werden und mit einem Doppelklick auf den Namen, wird das entsprechende Ereignis gesendet. Unter der Liste aller Ereignisnamen, zeigt ein Bildschirm die kürzlich eingetretenen Ereignisse über eine gewisse Zeit mit ihren Parametern an. Dies erlaubt das Überwachen des Verteilungsverhaltens des Netzwerks.

Die Namen von Ereignissen können spezifiziert werden. Ausserdem kann man mit einem Doppelklick auf den Namen das korresponierende Ereignis versenden. Unterhalb der Ereignisliste zeigt ein Protokoll die letztn Ereignisse mit den Parametern und der Zeit an. Dies erlaut das Überwachen der diversen Verhalten des Netzwerkes.

==== 8. Lokale Ereignisse und vorgegebene Funktionen ====
Studio zeigt die lokalen Ereignisse jedes Netzwerkelements an.
shows the local events available on each node. Zusätzlich werden die vorgegebenen Funktionen angezeigt. IIn der Werkzeughilfe wird jede vorgegebene Funktion kurz beschrieben. documentation.

= Tipps =

==== Zeit sparen ====
Sie können die Namen von Funktionen, Variablen, Ereignissen, und Konstanten abkürzen und so viel Zeit beim Eintippen sparen.

==== Hilfe ====

Das Menu ``Hilfe`` in Studio verbindet Sie sofort mit dieser Dokumentation und der der Aseba Befehlsprache. 
