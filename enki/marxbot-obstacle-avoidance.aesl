<!DOCTYPE aesl-source>
<network>
    <event name="ObstacleDetected" />
    <event name="FreeOfObstacle" />
    <node name="left motor" >speed = 300

onevent ObstacleDetected
speed = 300 + (args[0] - args[1]) * 4

onevent FreeOfObstacle
speed = 300
</node>
    <node name="right motor" >speed = 300

onevent ObstacleDetected
speed = 300 + (args[0] + args[1]) * 4

onevent FreeOfObstacle
speed = 300</node>
    <node name="proximity sensors" ># angles = pi/48:pi/12:(47*2*pi)/48
# vectorX = round(-cos(angles)*255)
# vectorY = round(-sin(angles)*255)

# vector field obstacle avoidance
var vectorX[24] = -254, -241, -212, -168, -113,  -50, 17, 82, 142, 192, 229, 250, 254, 241, 212,  168, 113, 50, -17, -82, -142, -192, -229, -250
var vectorY[24] = -17, -82, -142, -192, -229, -250, -254, -241, -212, -168, -113, -50, 17, 82  , 142, 192, 229, 250, 254, 241, 212, 168, 113, 50
var threshold = 80

ontimer

var eventBuffer[2]

var ret
var shift = 11
call mac(bumpers, vectorX, ret, shift)
eventBuffer[0] = ret
call mac(bumpers, vectorY, ret, shift)
eventBuffer[1] = ret
shift = 0
call mac(eventBuffer, eventBuffer, ret, shift)

if ret > threshold + 10 then
	emit ObstacleDetected eventBuffer
end
when ret &lt; threshold + -20 do
	emit FreeOfObstacle
end
	</node>
    <node name="distance sensors" ></node>
</network>
